<?xml version="1.0" encoding="UTF-8"?>
<!--

	Copyright (C) 2013  Reto Buerki <reet@codelabs.ch>
	Copyright (C) 2013  Adrian-Ken Rueegsegger <ken@codelabs.ch>

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xs:include schemaLocation="./types.xsd"/>
	<xs:include schemaLocation="./events.xsd"/>
	<xs:include schemaLocation="./traps.xsd"/>

	<xs:complexType name="subject_type">
		<xs:annotation>
			<xs:documentation>
				A subject specification defines the properties and resources of a subject. A subject is
				identified by a unique numeric id and name. The memory layout defines the subject's
				address space and physical location in memory while a binary reference specifies the binary
				file of the subject. Event and trap tables define how events and traps generated by the
				subject are handled. Device references and MSRs specify hardware resources the subject is
				allowed to access.
				A subject's CPU designates the logical processor that executes the subject. The number must
				be smaller than the number of CPUs specified in the hardware section of the policy.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="initial_state" type="initial_state_type"    minOccurs="1" maxOccurs="1"/>
			<xs:element name="memory_layout" type="memory_layout_type"    minOccurs="1" maxOccurs="1"/>
			<xs:element name="binary"        type="binary_reference_type" minOccurs="1" maxOccurs="1"/>
			<xs:element name="device"        type="device_reference_type" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="trap_table"    type="trap_table_type"       minOccurs="0" maxOccurs="1"/>
			<xs:element name="event_table"   type="event_table_type"      minOccurs="0" maxOccurs="1"/>
			<xs:element name="msr"           type="msr_type"              minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="id"                 type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="name"               type="subject_name_type"     use="required"/>
		<xs:attribute name="profile"            type="subject_profile_type"  use="required"/>
		<xs:attribute name="cpu"                type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="pml4_address"       type="address_type"          use="required"/>
		<xs:attribute name="io_bitmap_address"  type="address_type"          use="required">
			<xs:annotation>
				<xs:documentation>
					Physical memory address of the subject's I/O bitmap, see Intel SDM, volume 3C,
					section 24.6.4.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="msr_bitmap_address" type="address_type"          use="required">
			<xs:annotation>
				<xs:documentation>
					Physical memory address of the subject's MSR bitmap, see Intel SDM, volume 3C,
					section 24.6.9.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="subjects_type">
		<xs:annotation>
			<xs:documentation>
				The subject section of the policy defines all subjects that are part of a system specification.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="subject" type="subject_type" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="initial_state_type">
		<xs:annotation>
			<xs:documentation>
				The subject's execution environment is initialized to this state prior to execution.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="stack_address" type="address_type" use="required">
			<xs:annotation>
				<xs:documentation>
					Initial address value of the subject's stack pointer.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="entry_point"   type="address_type" use="required">
			<xs:annotation>
				<xs:documentation>
					Address of first instruction to execute when running the subject.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:simpleType name="subject_name_type">
		<xs:annotation>
			<xs:documentation>
				String uniquely identifying a subject.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="16"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="binary_reference_type">
		<xs:annotation>
			<xs:documentation>
				Reference to a binary file associated with the physical memory location at runtime.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="name"             type="xs:string"    use="required">
			<xs:annotation>
				<xs:documentation>
					Name of binary file reference. A binary element with a corresponding name must
					be present in the policy's binary section.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="physical_address" type="address_type" use="required">
			<xs:annotation>
				<xs:documentation>
					Physical address of subject binary in final system image. The referenced
					binary is copied to this address.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="device_reference_type">
		<xs:annotation>
			<xs:documentation>
				Reference to a hardware device. A subject is granted access to the resources
				specified by a referenced device. A device element with a corresponding name must
				be present in the hardware section of the policy.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="name" type="device_name_type" use="required"/>
	</xs:complexType>

	<xs:simpleType name="subject_profile_type">
		<xs:annotation>
			<xs:documentation>
				A subject profile specifies the environment the kernel provides for a subject.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="native">
				<xs:annotation>
					<xs:documentation>
						A native subject is a 64-bit application that runs in IA32-e mode.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="vm">
				<xs:annotation>
					<xs:documentation>
						A virtual machine (VM) subject is a 32-bit application that can do mode-switching
						and memory management/paging. It is commonly used to run a guest OS.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>


</xs:schema>
