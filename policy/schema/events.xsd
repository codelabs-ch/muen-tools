<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xs:include schemaLocation="./types.xsd"/>

	<xs:simpleType name="event_number_type">
		<xs:restriction base="xs:nonNegativeInteger">
			<xs:maxInclusive value="31"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="dst_vector_type">
		<xs:restriction base="xs:nonNegativeInteger">
			<xs:annotation>
				<xs:documentation>
					The value '256' designates "no vector".
				</xs:documentation>
			</xs:annotation>
			<xs:maxInclusive value="256"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="event_handover_type">
		<xs:annotation>
			<xs:documentation>
				A handover event transfers execution to a destination subject, optionally
				injecting an interrupt with given vector number. The destination subject must
				run on the same logical CPU as the triggering subject.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="event"       type="event_number_type" use="required"/>
		<xs:attribute name="dst_subject" type="subject_name_type" use="required"/>
		<xs:attribute name="dst_vector"  type="dst_vector_type"   use="optional"/>
	</xs:complexType>

	<xs:complexType name="event_interrupt_type">
		<xs:annotation>
			<xs:documentation>
				An interrupt event injects an interrupt with specified vector to a destination
				subject. If the send_ipi attribute is set to true, an inter-processor interrupt
				(IPI) is sent to the logical CPU executing the destination subject. The IPI
				mechanism leads to the immediate injection of the specified vector into the
				destination subject. The destination subject for an interrupt event with IPI must
				run on a different logical CPU than the triggering subject.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="event"       type="event_number_type" use="required"/>
		<xs:attribute name="dst_subject" type="subject_name_type" use="required"/>
		<xs:attribute name="dst_vector"  type="dst_vector_type"   use="required"/>
		<xs:attribute name="send_ipi"    type="xs:boolean"        use="optional"/>
	</xs:complexType>

	<xs:complexType name="event_table_type">
		<xs:choice minOccurs="1" maxOccurs="32">
			<xs:element name="handover"  type="event_handover_type"/>
			<xs:element name="interrupt" type="event_interrupt_type"/>
		</xs:choice>
	</xs:complexType>

</xs:schema>
