<?xml version="1.0" encoding="UTF-8"?>
<!--

	Copyright (C) 2013  Reto Buerki <reet@codelabs.ch>
	Copyright (C) 2013  Adrian-Ken Rueegsegger <ken@codelabs.ch>

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xs:include schemaLocation="./types.xsd"/>

	<xs:complexType name="event_table_type">
		<xs:annotation>
			<xs:documentation>
				Table specifying how events triggered by a subject are handled.
				Two kinds of events can be specified: interrupt and handover.
			</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="1" maxOccurs="32">
			<xs:element name="handover"  type="event_handover_type"/>
			<xs:element name="interrupt" type="event_interrupt_type"/>
		</xs:choice>
	</xs:complexType>

	<xs:complexType name="event_handover_type">
		<xs:annotation>
			<xs:documentation>
				A handover event transfers execution to a destination subject,
				optionally injecting an interrupt with given vector number. The
				destination subject must run on the same logical CPU as the
				triggering subject.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="event"       type="event_number_type" use="required"/>
		<xs:attribute name="dst_subject" type="subject_name_type" use="required"/>
		<xs:attribute name="dst_vector"  type="dst_vector_type"   use="optional"/>
	</xs:complexType>

	<xs:complexType name="event_interrupt_type">
		<xs:annotation>
			<xs:documentation>
				An interrupt event injects the specified vector into a
				destination subject. If the send_ipi attribute is set to true,
				an inter-processor interrupt (IPI) is sent to the logical CPU
				executing the destination subject. The IPI mechanism leads to
				the immediate injection of the specified vector into the
				destination subject. The destination subject for an interrupt
				event with IPI must run on a different logical CPU than the
				triggering subject.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="event"       type="event_number_type" use="required"/>
		<xs:attribute name="dst_subject" type="subject_name_type" use="required"/>
		<xs:attribute name="dst_vector"  type="dst_vector_type"   use="required"/>
		<xs:attribute name="send_ipi"    type="xs:boolean"        use="optional"/>
	</xs:complexType>

	<xs:simpleType name="event_number_type">
		<xs:annotation>
			<xs:documentation>
				Numeric value uniquely identifying an event.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:nonNegativeInteger">
			<xs:maxInclusive value="31"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="dst_vector_type">
		<xs:annotation>
			<xs:documentation>
				Numeric value identifying a destination vector. The value "256"
				designates "no vector".
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:nonNegativeInteger">
			<xs:maxInclusive value="256"/>
		</xs:restriction>
	</xs:simpleType>

</xs:schema>
