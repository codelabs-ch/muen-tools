# Muen Development Environment
#
# Build container:
#   docker build -t muen-dev-env -f Dockerfile.muen-dev-env .
#
# Enter the container:
#   docker run -it \
#     -v /tmp/.X11-unix:/tmp/.X11-unix \
#     -e DISPLAY=unix$DISPLAY muen-dev-env

# Base image
ARG distro_name=debian
ARG distro_version=stretch
FROM ${distro_name}:${distro_version}

LABEL maintainer "Adrian-Ken Rueegsegger <ken@codelabs.ch>"
LABEL description "This image provides the build environment for the Muen project"

ENV CVC4_VERSION 1.5
ENV Z3_VERSION 4.5.0

ENV CC ccache gcc
ENV CXX ccache g++

# Install dependencies
RUN apt-get update && apt-get install -y \
		acpica-tools \
		amtterm \
		bc \
		binutils-dev \
		bison \
		bzip2 \
		ca-certificates \
		ccache \
		cpio \
		curl \
		file \
		flex \
		g++ \
		git-core \
		gnuplot \
		grub-pc-bin \
		inotify-tools \
		lcov \
		libc6-dev \
		libcurl4-gnutls-dev \
		libelf-dev \
		libiberty-dev \
		libncurses-dev \
		libsdl1.2-dev \
		libssl-dev \
		libxml2-utils \
		make \
		patch \
		python \
		rsync \
		tidy \
		unzip \
		vim \
		wget \
		xorriso \
		xsltproc \
		xz-utils \
		zlib1g-dev \
		--no-install-recommends \
		&& rm -rf /var/lib/apt/lists/*

# Install AdaCore toolchain: GNAT compiler and SPARK tools
RUN curl -sSL "https://www.codelabs.ch/download/ada/gnat-gpl-2017-x86_64-linux-bin.tar.gz" -o /tmp/gnat-gpl-2017-x86_64-linux-bin.tar.gz \
	&& tar zxf /tmp/gnat-gpl-2017-x86_64-linux-bin.tar.gz -C /opt \
	&& rm -f /tmp/gnat-gpl-2017-x86_64-linux-bin.tar.gz
RUN curl -sSL "https://www.codelabs.ch/download/ada/spark-discovery-gpl-2017-x86_64-linux-bin.tar.gz" -o /tmp/spark-discovery-gpl-2017-x86_64-linux-bin.tar.gz \
	&& tar zxf /tmp/spark-discovery-gpl-2017-x86_64-linux-bin.tar.gz -C /opt \
	&& rm -f /tmp/spark-discovery-gpl-2017-x86_64-linux-bin.tar.gz

# Install additional provers required by gnatprove
RUN curl -sSL "https://github.com/Z3Prover/z3/releases/download/z3-${Z3_VERSION}/z3-${Z3_VERSION}-x64-debian-8.5.zip" -o /tmp/z3.zip \
	&& unzip -d /opt /tmp/z3.zip && rm -f /tmp/z3.zip
RUN curl -sSL "http://cvc4.cs.stanford.edu/downloads/builds/x86_64-linux-opt/cvc4-${CVC4_VERSION}-x86_64-linux-opt" -o /usr/local/bin/cvc4 \
	&& chmod 755 /usr/local/bin/cvc4

# Install Bochs for emulation
ARG bochs_revison=89265f376
RUN git clone https://github.com/svn2github/bochs.git /tmp/bochs \
	&& cd /tmp/bochs/bochs \
	&& git checkout ${bochs_revison} \
	&& ./configure \
		--prefix=/usr/local \
		--enable-vmx=2 \
		--enable-smp \
		--enable-cdrom \
		--enable-x86-64 \
		--enable-avx \
		--with-sdl \
		--with-term \
	&& make install \
	&& rm -rf /tmp/bochs

# amtc tool
RUN git clone https://github.com/schnoddelbotz/amtc.git /tmp/amtc \
	&& cd /tmp/amtc \
	&& make amtc \
	&& cp src/amtc /usr/local/bin \
	&& rm -rf /tmp/amtc

# Setup environment
ENV HOME /home/user
ENV LANG C.UTF-8
ENV PATH /opt/gnat-gpl-2017-x86_64-linux-bin/bin/:/opt/spark-discovery-gpl-2017-x86_64-linux-bin/bin:/opt/z3-${Z3_VERSION}-x64-debian-8.5/bin:$PATH

# Add development user
RUN useradd --create-home --home-dir $HOME user -G dialout \
	&& chown -R user:user $HOME

WORKDIR $HOME
USER user

# Grab Muen source code
ARG muen_branch=devel
ARG muen_clone_opts

# Re-clone if given branch changed
ARG github_token
ADD https://api.github.com/repos/codelabs-ch/muen/git/refs/heads/${muen_branch}?access_token=$github_token /dev/null
RUN git clone --recursive ${muen_clone_opts} -b $muen_branch https://git.codelabs.ch/git/muen.git

WORKDIR $HOME/muen

# Download 3rd-party libraries
RUN make -C contrib download

# Download and install initramfs.
RUN make -C components/linux install_initramfs

CMD [ "bash" ]
