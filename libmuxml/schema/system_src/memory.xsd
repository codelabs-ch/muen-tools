<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

 <xs:complexType name="memoryType">
  <xs:annotation>
   <xs:documentation>
    The \texttt{memoryType} specifies a physical memory region by name, size and
    caching.

    If no explicit physical address is specified for the region, the
    \texttt{mucfgalloc} tool will allocate a free one in usable memory, honoring
    the optional \texttt{alignment} attribute.
   </xs:documentation>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="physicalMemBaseType">
    <xs:attribute name="type" type="subjectMemoryKindType" use="optional">
     <xs:annotation>
      <xs:documentation>
       Optional subject memory type.
      </xs:documentation>
     </xs:annotation>
    </xs:attribute>
    <xs:attribute name="alignment" type="alignmentType" use="optional">
     <xs:annotation>
      <xs:documentation>
       Alignment to consider if physical address is to be allocated
       automatically.
      </xs:documentation>
     </xs:annotation>
    </xs:attribute>
    <xs:attribute name="physicalAddress" type="word64Type" use="optional">
     <xs:annotation>
      <xs:documentation>
       Physical address of memory region.
      </xs:documentation>
     </xs:annotation>
    </xs:attribute>
   </xs:extension>
  </xs:complexContent>
 </xs:complexType>

 <xs:complexType name="memoryBlockType">
  <xs:annotation>
   <xs:documentation>
    Consecutive block of memory provided by the hardware.
   </xs:documentation>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="memoryBlockBaseType">
    <xs:attribute name="allocatable" type="booleanType" use="optional">
     <xs:annotation>
      <xs:documentation>
       Indication to a physical memory allocator that this block allows
       allocation of physical memory regions. If this attribute is false, an
       allocator should only place fixed memory regions in this range, i.e.
       memory regions with the \texttt{physicalAddress} attribute set by the
       integrator.

       Note that host physical memory below 1 MiB is considered special, the
       attribute must be set to false. Only unmapped memory of type
       \emph{system} is allowed in that special zone.
      </xs:documentation>
     </xs:annotation>
    </xs:attribute>
   </xs:extension>
  </xs:complexContent>
 </xs:complexType>

 <xs:complexType name="reservedMemRegionType">
  <xs:annotation>
   <xs:documentation>
    A \texttt{reservedMemory} element is a special memory block declaration. It
    specifies a reserved memory region as outlined in the Intel VT-d
    Specification, "8.4 Reserved Memory Region Reporting Structure" (RMRR).

    Reserved memory regions are BIOS allocated memory ranges that may be DMA
    targets for certain legacy device use-cases. Devices that require access to
    such a region refer to it by name.

    See line \ref{lst:af-lineref-rmrr-block} in listing \ref{lst:annotated-policy}
    for an example RMRR element.
   </xs:documentation>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="memoryBlockBaseType"/>
  </xs:complexContent>
 </xs:complexType>

 <xs:complexType name="fileContentType">
  <xs:attribute name="filename" type="xs:string"          use="required"/>
  <xs:attribute name="offset"   type="optionalOffsetType" use="required"/>
 </xs:complexType>

 <xs:simpleType name="subjectMemoryKindType">
  <xs:annotation>
   <xs:documentation>
    Subject memory type to categorize memory assigned to a subject. Used by
    build tools to lookup certain elements by type. For example, the
    \texttt{mugenzp} tool looks for subject memory of type
    \texttt{subject\_zeropage} to process all Linux zero-pages in the policy.
   </xs:documentation>
  </xs:annotation>
  <xs:restriction base="memoryKindType">
   <xs:enumeration value="subject"/>
   <xs:enumeration value="subject_info"/>
   <xs:enumeration value="subject_state"/>
   <xs:enumeration value="subject_binary"/>
   <xs:enumeration value="subject_channel"/>
   <xs:enumeration value="subject_crash_audit"/>
   <xs:enumeration value="subject_initrd"/>
   <xs:enumeration value="subject_bios"/>
   <xs:enumeration value="subject_acpi_rsdp"/>
   <xs:enumeration value="subject_acpi_xsdt"/>
   <xs:enumeration value="subject_acpi_fadt"/>
   <xs:enumeration value="subject_acpi_dsdt"/>
   <xs:enumeration value="subject_zeropage"/>
   <xs:enumeration value="subject_solo5_boot_info"/>
   <xs:enumeration value="subject_device"/>
   <xs:enumeration value="subject_timed_event"/>
  </xs:restriction>
 </xs:simpleType>

</xs:schema>
