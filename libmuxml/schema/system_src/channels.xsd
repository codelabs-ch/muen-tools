<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

 <xs:complexType name="channelsType">
  <xs:annotation>
   <xs:documentation>
    Inter-subject communication is specified by so called channels. These
    channels represent directed information flows since they have a single
    writer and possibly multiple readers. Optionally a channel can have an
    associated notification event (doorbell interrupt).

    Channels are declared globally and have an unique name to be unambiguous.

    For documentation about linking physical channels to subjects and
    components, see sections \ref{system_src.xsd:channelReferencesType} and
    \ref{system_src.xsd:logicalChannelsType}.

    For information how to map a physical channel with a logical component
    channel at subject level, see section \ref{system_src.xsd:resourceMappingType}.

    Note that channels are a policy source format abstraction. The toolchain
    resolves this concept into subjects by adding the appropriate memory
    regions and events.

    See line \ref{lst:af-lineref-channels} in listing \ref{lst:annotated-policy}
    for an example channel section.
   </xs:documentation>
  </xs:annotation>
  <xs:sequence>
   <xs:element name="channel" type="channelType" minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
 </xs:complexType>

 <xs:complexType name="channelType">
  <xs:attribute name="name"     type="nameType"       use="required"/>
  <xs:attribute name="size"     type="memorySizeType" use="required"/>
  <xs:attribute name="hasEvent" type="eventModeType"  use="optional"/>
 </xs:complexType>

 <xs:complexType name="channelReferencesType">
  <xs:choice minOccurs="0" maxOccurs="unbounded">
   <xs:element name="reader" type="channelReaderType"/>
   <xs:element name="writer" type="channelWriterType"/>
  </xs:choice>
 </xs:complexType>

 <xs:complexType name="channelReaderType">
  <xs:attribute name="logical"        type="nameType"   use="required"/>
  <xs:attribute name="physical"       type="nameType"   use="required"/>
  <xs:attribute name="virtualAddress" type="word64Type" use="required"/>
  <xs:attribute name="vector"         type="vectorType" use="optional"/>
 </xs:complexType>

 <xs:complexType name="channelWriterType">
  <xs:attribute name="logical"        type="nameType"              use="required"/>
  <xs:attribute name="physical"       type="nameType"              use="required"/>
  <xs:attribute name="virtualAddress" type="word64Type"            use="required"/>
  <xs:attribute name="event"          type="xs:nonNegativeInteger" use="optional"/>
 </xs:complexType>

</xs:schema>
