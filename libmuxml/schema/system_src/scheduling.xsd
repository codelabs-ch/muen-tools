<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

 <xs:complexType name="majorFrameType">
  <xs:annotation>
   <xs:documentation>
    A major frame consists of a sequence of minor frames for a given CPU. When
    the end of a major frame is reached, all CPUs synchronize and the scheduler
    starts over from the beginning using the first minor frame again. This means
    that major frames are repeated in a cyclic fashion until a different major
    frame is designated via the Tau0 interface.

    See line \ref{lst:af-lineref-sched-major} in listing
    \ref{lst:annotated-policy} for an example major frame.
   </xs:documentation>
  </xs:annotation>
  <xs:sequence>
   <xs:element name="cpu" type="cpuType" minOccurs="1" maxOccurs="unbounded"/>
  </xs:sequence>
 </xs:complexType>

 <xs:complexType name="minorFrameType">
  <xs:annotation>
   <xs:documentation>
    A minor frame specifies the number of scheduling ticks a subject is allowed
    to run on the CPU specified by the parent \texttt{cpu} element.

    See line \ref{lst:af-lineref-sched-minor} in listing
    \ref{lst:annotated-policy} for an example minor frame.
   </xs:documentation>
  </xs:annotation>
  <xs:attribute name="subject" type="nameType" use="required">
   <xs:annotation>
    <xs:documentation>
     Name of scheduled subject.
    </xs:documentation>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="partition" type="nameType" use="optional">
   <xs:annotation>
    <xs:documentation>
     Name of scheduled partition.
    </xs:documentation>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="ticks" type="xs:positiveInteger" use="required">
   <xs:annotation>
    <xs:documentation>
     Number of scheduling ticks in minor frame.
    </xs:documentation>
   </xs:annotation>
  </xs:attribute>
 </xs:complexType>

 <xs:complexType name="schedulingGroupType">
  <xs:annotation>
   <xs:documentation>
    The scheduling \texttt{group} element is used to specify a collection of
    subjects that may cooperatively schedule each other via handover events.
    Scheduling groups must contain at least one subject. As an example, a Linux
    subject and its associated Subject Monitor form a scheduling group.

    See line \ref{lst:af-lineref-sched-group} in listing
    \ref{lst:annotated-policy} for an example scheduling group.
   </xs:documentation>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="baseSchedulingGroupType"/>
  </xs:complexContent>
 </xs:complexType>

 <xs:complexType name="schedulingPartitionType">
  <xs:annotation>
   <xs:documentation>
    The scheduling \texttt{partition} element is used to specify a collection of
    scheduling groups consisting of subjects that require spatial but not
    temporal isolation from each other. Within a scheduling partition, all
    scheduling groups are scheduled round robin with preemption (i.e.
    non-cooperatively) and the opportunity to yield and/or sleep. No
    priorization is implemented on purpose to avoid any starvation issue
    (Priorization with starvation protection cannot be implemented with low
    complexity).

    A scheduling partition must contain at least one scheduling group.

    See line \ref{lst:af-lineref-sched-partition} in listing
    \ref{lst:annotated-policy} for an example scheduling partition.
   </xs:documentation>
  </xs:annotation>
  <xs:complexContent>
   <xs:extension base="baseSchedulingPartitionType"/>
  </xs:complexContent>
 </xs:complexType>

</xs:schema>
