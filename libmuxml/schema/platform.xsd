<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

 <xs:complexType name="aliasesType">
  <xs:annotation>
   <xs:documentation>
    Aliases are a renaming mechanism for physical hardware devices and their
    resources. By using alias names in the system policy references to
    concrete hardware resources can be avoided.
    Additionally, aliases may be used to define a device which only contains a
    subset of the resources of the physical device. This can be achieved by
    only renaming the resources that the device alias should export.

    See line \ref{lst:af-lineref-aliases} in listing \ref{lst:annotated-policy}
    for an example aliases section.
   </xs:documentation>
  </xs:annotation>
  <xs:sequence>
   <xs:element name="alias" type="namePhysRefType" minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
 </xs:complexType>

 <xs:complexType name="namePhysRefType">
  <xs:annotation>
   <xs:documentation>
    Named resource reference. Used for device aliases and device alias resource
    references.
   </xs:documentation>
  </xs:annotation>
  <xs:sequence>
   <xs:element name="resource" type="namePhysRefType" minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
  <xs:attribute name="name" type="nameType" use="required">
   <xs:annotation>
    <xs:documentation>
     Alias name.
    </xs:documentation>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="physical" type="nameType" use="required">
   <xs:annotation>
    <xs:documentation>
     Reference to physical device or device resource.
    </xs:documentation>
   </xs:annotation>
  </xs:attribute>
 </xs:complexType>

 <xs:complexType name="devClassesType">
  <xs:annotation>
   <xs:documentation>
    The \texttt{classes} element specifies a list of device classes.
   </xs:documentation>
  </xs:annotation>
  <xs:sequence>
   <xs:element name="class" type="devClassType" minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
 </xs:complexType>

 <xs:complexType name="devClassType">
  <xs:annotation>
   <xs:documentation>
    Device classes enable the grouping of devices and allow referencing all
    devices by a single name. This simplifies the process of assigning multiple
    devices to a subject.

    Note: A device class may contain an arbitrary number of devices, including
    zero.

    See line \ref{lst:af-lineref-devclass} in listing \ref{lst:annotated-policy}
    for a device class example.
   </xs:documentation>
  </xs:annotation>
  <xs:sequence>
   <xs:element name="device" type="physRefType" minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
  <xs:attribute name="name" type="nameType" use="required">
   <xs:annotation>
    <xs:documentation>
     Device class name.
    </xs:documentation>
   </xs:annotation>
  </xs:attribute>
 </xs:complexType>

 <xs:complexType name="physRefType">
  <xs:attribute name="physical" type="nameType" use="required"/>
 </xs:complexType>

 <xs:complexType name="kernelDiagType">
  <xs:annotation>
   <xs:documentation>
    The Muen SK can be instructed to output debugging information during
    runtime. The platform diagnostics device specifies which device the kernel
    is to use for this purpose.

    The presence of this device and the necessary resources are checked by the
    validator tool.

    See line \ref{lst:af-lineref-diagdev} in listing \ref{lst:annotated-policy}
    for an example platform diagnostic device configuration.
   </xs:documentation>
  </xs:annotation>
  <xs:sequence>
   <xs:element name="device" type="kernelDiagDeviceType" minOccurs="0" maxOccurs="1"/>
  </xs:sequence>
  <xs:attribute name="type" type="kernelDiagKindType" use="required">
   <xs:annotation>
    <xs:documentation>
     Specifies the type of diagnostics device to use.
    </xs:documentation>
   </xs:annotation>
  </xs:attribute>
 </xs:complexType>

 <xs:simpleType name="kernelDiagKindType">
  <xs:annotation>
   <xs:documentation>
    Type of diagnostics device. While \texttt{none} disables kernel diagnostics
    output, \texttt{uart} specifies an Universal Asynchronous
    Receiver-Transmitter serial device.

    \texttt{vga} outputs the kernel diagnostics information to a VGA console,
    which is mainly useful for initial bring-up of a new hardware platform with
    no UART device.
   </xs:documentation>
  </xs:annotation>
  <xs:restriction base="xs:string">
   <xs:enumeration value="none"/>
   <xs:enumeration value="uart"/>
   <xs:enumeration value="hsuart"/>
   <xs:enumeration value="vga"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:complexType name="kernelDiagDeviceType">
  <xs:annotation>
   <xs:documentation>
    Reference to physical device for \texttt{uart} and \texttt{vga} diagnostic
    device type.

    If an UART device is referenced via type \texttt{uart}, an I/O port resource
    must be provided. If a VGA device is referenced via type \texttt{vga}, a
    memory resource must be provided (both checked via validator).
   </xs:documentation>
  </xs:annotation>
  <xs:sequence>
   <xs:element name="memory" type="physRefType" minOccurs="0" maxOccurs="unbounded"/>
   <xs:element name="ioPort" type="physRefType" minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
  <xs:attribute name="physical" type="nameType" use="required">
   <xs:annotation>
    <xs:documentation>
     Name of physical device to use for kernel diagnostics output.
    </xs:documentation>
   </xs:annotation>
  </xs:attribute>
 </xs:complexType>

</xs:schema>
